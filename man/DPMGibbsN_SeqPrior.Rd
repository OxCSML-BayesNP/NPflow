% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DPMGibbsN_SeqPrior.R
\name{DPMGibbsN_SeqPrior}
\alias{DPMGibbsN_SeqPrior}
\title{Slice Sampling of Dirichlet Process Mixture of Gaussian distibutions}
\usage{
DPMGibbsN_SeqPrior(z, prior, hyperG0, N, nbclust_init, add.vagueprior = TRUE,
  weightnoninf = NULL, doPlot = TRUE, plotevery = 1, diagVar = TRUE,
  verbose = TRUE, ...)
}
\arguments{
\item{z}{data matrix \code{d x n} with \code{d} dimensions in rows 
and \code{n} observations in columns.}

\item{hyperG0}{prior mixing distribution.}

\item{N}{number of MCMC iterations.}

\item{nbclust_init}{number of clusters at initialisation. 
Default to 30 (or less if there are less than 30 observations).}

\item{doPlot}{logical flag indicating wether to plot MCMC iteration or not.
Default to \code{TRUE}.}

\item{diagVar}{logical flag indicating wether the variance of each cluster is 
estimated as a diagonal matrix, or as a full matrix. 
Default is \code{TRUE} (diagonal variance).}

\item{verbose}{logical flag indicating wether partition info is 
written in the console at each MCMC iteration.}

\item{a}{shape hyperparameter of the Gamma prior 
on the parameter of the Dirichlet Process.}

\item{b}{scale hyperparameter of the Gamma prior 
on the parameter of the Dirichlet Process.}
}
\value{
a object of class \code{DPMclust} with the following attributes: 
 \itemize{
     \item{\code{mcmc_partitions}:}{ a list of length \code{N}. Each
      element \code{mcmc_partitions[n]} is a vector of length 
      \code{n} giving the partition of the \code{n} observations.}
     \item{\code{alpha}:}{ a vector of length \code{N}. \code{cost[j]} is the cost 
associated to partition \code{c[[j]]}}
     \item{\code{weights_list}:}{}
     \item{\code{logposterior_list}:}{}
     \item{\code{data}:}{ the data matrix \code{d x n} with \code{d} dimensions in rows 
and \code{n} observations in columns.}
     \item{\code{nb_mcmcit}:}{ the number of MCMC itertations}
     \item{\code{hyperG0}:}{the prior on the cluster location}
 }
}
\description{
Slice Sampling of Dirichlet Process Mixture of Gaussian distibutions
}
\examples{

rm(list=ls())
library(ggplot2)
#Number of data
n <- 2000
# Sample data
#m <- matrix(nrow=2, ncol=4, c(-1, 1, 1.5, 2, 2, -2, 0.5, -2))
m <- matrix(nrow=2, ncol=4, c(-.8, .7, .5, .7, .5, -.7, -.5, -.7))
p <- c(0.2, 0.1, 0.4, 0.3) # frequence des clusters

sdev <- array(dim=c(2,2,4))
sdev[, ,1] <- matrix(nrow=2, ncol=2, c(0.3, 0, 0, 0.3))
sdev[, ,2] <- matrix(nrow=2, ncol=2, c(0.1, 0, 0, 0.3))
sdev[, ,3] <- matrix(nrow=2, ncol=2, c(0.3, 0.15, 0.15, 0.3))
sdev[, ,4] <- .3*diag(2)
c <- rep(0,n)
z <- matrix(0, nrow=2, ncol=n)
for(k in 1:n){
 c[k] = which(rmultinom(n=1, size=1, prob=p)!=0)
 z[,k] <- m[, c[k]] + sdev[, , c[k]]\%*\%matrix(rnorm(2, mean = 0, sd = 1), nrow=2, ncol=1)
 #cat(k, "/", n, " observations simulated\\n", sep="")
}

d<-2
# Set parameters of G0
hyperG0 <- list()
hyperG0[["mu"]] <- rep(0,d)
hyperG0[["kappa"]] <- 0.001
hyperG0[["nu"]] <- d+2
hyperG0[["lambda"]] <- diag(d)/10

# hyperprior on the Scale parameter of DPM
a <- 0.0001
b <- 0.0001

# Number of iterations
N <- 30

# do some plots
doPlot <- TRUE
nbclust_init <- 20



## Data
########
p <- (ggplot(data.frame("X"=z[1,], "Y"=z[2,]), aes(x=X, y=Y))
      + geom_point()
      + ggtitle("Toy example Data"))
p


## alpha priors plots
#####################
prioralpha <- data.frame("alpha"=rgamma(n=5000, shape=a, scale=1/b),
                         "distribution" =factor(rep("prior",5000),
                                                levels=c("prior", "posterior")))


# Gibbs sampler for Dirichlet Process Mixtures
##############################################
MCMCsample <- DPMGibbsN(z, hyperG0, a, b, N=2000, doPlot, nbclust_init, 
                        plotevery=200, diagVar=FALSE)

s <- summary(MCMCsample, posterior_approx=TRUE, burnin = 1750, thin=2 ,K=4)
F1 <- FmeasureC(pred=s$point_estim$c_est, ref=c)
F1


MCMCsample2 <- DPMGibbsN_SeqPrior(z, prior=s$param_posterior,
                                  hyperG0, N=2000,
                                  add.vagueprior = FALSE,
                                  doPlot=TRUE, plotevery=200,
                                  nbclust_init, diagVar=FALSE)


s2 <- summary(MCMCsample2, burnin = 1750, thin=2)
F2 <- FmeasureC(pred=s2$point_estim$c_est, ref=c)
F2
}
\author{
Boris Hejblum, Alkhassim Chariff
}

