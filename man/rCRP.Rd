% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/rCRP.R
\name{rCRP}
\alias{rCRP}
\title{Generating cluster data from the Chinese Restaurant Process}
\usage{
rCRP(n = 1000, alpha = 2, hyperG0)
}
\arguments{
\item{n}{}

\item{alpha}{}

\item{hyperG0}{}
}
\description{
Generating cluster data from the Chinese Restaurant Process
}
\examples{
rm(list=ls())

d=2
hyperG0 <- list()
hyperG0[["NNiW"]] <- list()
hyperG0[["NNiW"]][["b_xi"]] <- rep(0,d)
hyperG0[["NNiW"]][["b_psi"]] <- rep(0,d)
hyperG0[["NNiW"]][["D_xi"]] <- 100
hyperG0[["NNiW"]][["D_psi"]] <- 8
hyperG0[["NNiW"]][["nu"]] <- d+1
hyperG0[["NNiW"]][["lambda"]] <- diag(c(1,1))

hyperG0[["scale"]] <- list()

set.seed(4321)
alph <- runif(n=1,0.2,2)
GvHD_sims <- rCRP(n=2000, alpha=alph, hyperG0=hyperG0)
q <- (ggplot(data=cbind.data.frame("D1"=GvHD_sims$data[1,],
                                  "D2"=GvHD_sims$data[2,],
                                  "Cluster"=GvHD_sims$cluster),
             aes(x=D1, y=D2, colour=Cluster))
      + geom_point()
      + stat_density2d()
      + theme_bw()
      )
q

MCMCy1 <- DPMGibbsSkewT(z=GvHD_sims$data[,1:1000],
                        hyperG0$NNiW, a=0.0001, b=0.0001, N=5000,
                        doPlot=TRUE, nbclust_init=64, plotevery=500,
                        gg.add=list(theme_bw()), diagVar=FALSE)
 s1 <- summary(MCMCy1, burnin=4000, thin=5,
               posterior_approx=TRUE)
 F1 <- FmeasureC(ref=GvHD_sims$cluster[1:1000], pred=s1$point_estim$c_est)

 # s <- summary(MCMCy1, burnin=4000, thin=5,
 #               posterior_approx=TRUE, K=1)
 # s2 <- summary(MCMCy1, burnin=4000, thin=5,
 #               posterior_approx=TRUE, K=2)
 # MCMCy2_seqPrior <- DPMGibbsSkewT(z=GvHD_sims$data[,1001:2000],
 #                                  hyperG0=s1$param_post$parameters,
 #                                  a=s1$param_post$alpha_param$shape,
 #                                  b=s1$param_post$alpha_param$rate,
 #                                  N=5000, doPlot=TRUE, nbclust_init=64, plotevery=500,
 #                                  gg.add=list(theme_bw()), diagVar=FALSE)

 MCMCy2_seqPrior <- DPMGibbsSkewT_SeqPrior(z=GvHD_sims$data[,1001:2000],
                                           prior=s2$param_post, hyperG0=hyperG0$NNiW, , N=5000,
                                           doPlot=TRUE, nbclust_init=64, plotevery=100,
                                           gg.add=list(theme_bw()), diagVar=FALSE)
 s2_seqPrior <- summary(MCMCy2_seqPrior, burnin=4000, thin=5)
 F2_seqPrior <- FmeasureC(ref=GvHD_sims$cluster[1001:2000], pred=s2_seqPrior$point_estim$c_est)

MCMCy2 <- DPMGibbsSkewT(z=GvHD_sims$data[,1001:2000],
                        hyperG0$NNiW, a=0.0001, b=0.0001, N=5000,
                        doPlot=TRUE, nbclust_init=64, plotevery=500,
                        gg.add=list(theme_bw()), diagVar=FALSE)
 s2 <- summary(MCMCy2, burnin=4000, thin=5)
 F2 <- FmeasureC(ref=GvHD_sims$cluster[1001:2000], pred=s2$point_estim$c_est)

 MCMCtot <- DPMGibbsSkewT(z=GvHD_sims$data,
                          hyperG0$NNiW, a=0.0001, b=0.0001, N=5000,
                          doPlot=TRUE, nbclust_init=64, plotevery=500,
                          gg.add=list(theme_bw()), diagVar=FALSE)
 stot <- summary(MCMCtot, burnin=4000, thin=5)
 F2tot <- FmeasureC(ref=GvHD_sims$cluster[1001:2000], pred=stot$point_estim$c_est[1001:2000])

 c(F1, F2, F2_seqPrior, F2tot)
}

